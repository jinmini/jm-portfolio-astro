---
import { getCollection } from 'astro:content';
import KPICard from './KPICard.astro';

const esgEntries = await getCollection('esg');

const specialEmphasisSlugs = ['e1', 'e3', 'g1'];

// 일관된 순서를 위한 정렬
const sortedEntries = esgEntries.sort((a, b) => {
    if (a.data.year !== b.data.year) {
        return parseInt(b.data.year) - parseInt(a.data.year);
    }
    return a.slug.localeCompare(b.slug);
});

let highEmphasisCounter = 0;
const kpiItems = sortedEntries.map(entry => {
  let emphasis: 'extra-high' | 'high' | 'normal' = 'normal';
  if (specialEmphasisSlugs.includes(entry.slug)) {
    // 3개의 강조 카드에 두 가지 다른 큰 크기를 번갈아 적용
    emphasis = highEmphasisCounter < 2 ? 'extra-high' : 'high';
    highEmphasisCounter++;
  }

  return {
    title: entry.data.title,
    category: entry.data.category,
    impact: entry.data.impact,
    period: entry.data.period,
    role: entry.data.role,
    emphasis: emphasis, // 카드의 중요도(크기)를 결정할 prop
    thumbnail: entry.data.thumbnail, // 썸네일 정보 추가
    slug: entry.slug,
  };
});
---

<div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 lg:grid-rows-4 gap-4 md:gap-6 auto-rows-[240px] [grid-auto-flow:dense]">
  {kpiItems.slice(0, 12).map(item => (
    <KPICard item={item} />
  ))}
</div> 