---
import type { CollectionEntry } from 'astro:content';

interface Props {
  project: CollectionEntry<'project'>;
  variant?: 'simple' | 'detailed';
  index?: number;
}

const { project, variant = 'simple', index = 0 } = Astro.props;
const { slug, data } = project;
const { title, description, date, thumbnail, video, tags = [], links, featured } = data;

// date 표시 형식
const displayDate = new Date(date).toLocaleDateString('ko-KR');

// detailed variant에서 홀수 인덱스일 때 이미지와 콘텐츠 순서 변경
const isReversed = variant === 'detailed' && index % 2 === 1;
---

{variant === 'simple' ? (
  <!-- Simple variant: 완전 비주얼 중심 (Index 페이지용) -->
  <div 
    class="project-card group relative aspect-[4/3] rounded-2xl overflow-hidden shadow-lg hover:shadow-2xl transition-all duration-500 transform hover:-translate-y-2 cursor-pointer"
    data-project-slug={slug}
    data-video-url={video?.url || ''}
    data-video-thumbnail={video?.thumbnail || thumbnail || ''}
    data-autoplay={video?.autoplay || false}
    data-loop={video?.loop !== false}
    onclick={`openProjectModal('${slug}')`}
  >
    <!-- 메인 미디어 영역 -->
    <div class="relative w-full h-full overflow-hidden">
      <!-- 초기 로딩: WebP 썸네일 (CSS 애니메이션) -->
      <div class="media-container w-full h-full">
        {thumbnail ? (
          <img 
            src={thumbnail} 
            alt={title} 
            class="thumbnail-image w-full h-full object-cover transition-transform duration-700 group-hover:scale-110"
            loading="lazy"
          />
        ) : (
          <div class="w-full h-full bg-gradient-to-br from-blue-400 via-purple-500 to-pink-500 flex items-center justify-center text-white text-6xl animate-pulse-gradient">
            🚀
          </div>
        )}
        
        <!-- 지연 로딩될 비디오 (초기에는 숨김) -->
        <video 
          class="lazy-video w-full h-full object-cover opacity-0 absolute inset-0 transition-opacity duration-500"
          muted
          loop={video?.loop !== false}
          preload="none"
          playsinline
          poster={video?.thumbnail || thumbnail}
        >
          {video?.url && <source src={video.url} type="video/mp4" />}
        </video>
      </div>

      <!-- Featured 배지 -->
      {featured && (
        <div class="absolute top-4 right-4 z-30">
          <span class="bg-gradient-to-r from-yellow-400 to-orange-500 text-white px-3 py-1 rounded-full text-xs font-bold shadow-lg backdrop-blur-sm border border-yellow-300/50">
            ⭐ Featured
          </span>
        </div>
      )}

      <!-- 호버 오버레이 (정보 표시) -->
      <div class="absolute inset-0 bg-gradient-to-t from-black/90 via-black/50 to-transparent opacity-0 group-hover:opacity-100 transition-all duration-500 flex flex-col justify-end p-6 z-20">
        
        <!-- 프로젝트 정보 -->
        <div class="transform translate-y-8 group-hover:translate-y-0 transition-transform duration-500 delay-100">
          <h3 class="text-xl font-bold text-white mb-2">
            {title}
          </h3>
          
          <!-- 기술 스택 -->
          <div class="flex flex-wrap gap-1 mb-4">
            {tags.slice(0, 4).map((tag) => (
              <span class="px-2 py-1 bg-white/20 backdrop-blur-sm text-white text-xs rounded-full font-medium border border-white/30">
                {tag}
              </span>
            ))}
            {tags.length > 4 && (
              <span class="px-2 py-1 bg-white/20 backdrop-blur-sm text-white text-xs rounded-full font-medium border border-white/30">
                +{tags.length - 4}
              </span>
            )}
          </div>

          <!-- Details 버튼 -->
          <button 
            onclick={`openProjectModal('${slug}'); event.stopPropagation();`}
            class="w-full mt-2 inline-flex items-center justify-center px-4 py-2 bg-gradient-to-r from-cyan-500 to-blue-500 text-white rounded-lg hover:from-cyan-600 hover:to-blue-600 transition-all duration-300 font-medium shadow-lg text-sm"
          >
            <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/></svg>
            자세히 보기
          </button>
        </div>
      </div>

      <!-- 비디오 재생 인디케이터 (비디오가 있을 때만) -->
      {video?.url && (
        <div class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-16 h-16 bg-black/50 backdrop-blur-sm rounded-full flex items-center justify-center opacity-0 group-hover:opacity-100 transition-all duration-300 z-10 pointer-events-none">
          <svg class="w-8 h-8 text-white ml-1" fill="currentColor" viewBox="0 0 24 24">
            <path d="M8 5v14l11-7z"/>
          </svg>
        </div>
      )}
    </div>
  </div>
) : (
  <!-- Detailed variant: [page].astro 스타일 -->
  <article class={`group bg-white dark:bg-gray-800 rounded-2xl shadow-lg overflow-hidden border border-gray-200 dark:border-gray-700 hover:shadow-xl transition-all duration-300 ${isReversed ? 'lg:flex-row-reverse' : ''}`}>
    <div class="lg:flex lg:items-center lg:gap-8">
      
      <!-- 프로젝트 이미지/영상 -->
      <div class="lg:w-1/2 relative overflow-hidden">
        <div class="relative h-64 lg:h-80 group">
          {video ? (
            <!-- 영상이 있는 경우 -->
            <div class="relative w-full h-full">
              <video 
                class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-500"
                muted
                loop={video.loop !== false}
                autoplay={video.autoplay === true}
                poster={video.thumbnail || thumbnail}
                preload="metadata"
                playsinline
              >
                <source src={video.url} type="video/mp4" />
                <!-- 폴백: 영상을 지원하지 않는 브라우저 -->
                {thumbnail && (
                  <img src={thumbnail} alt={title} class="w-full h-full object-cover" />
                )}
              </video>
            </div>
          ) : thumbnail ? (
            <!-- 영상이 없고 썸네일이 있는 경우 -->
            <img 
              src={thumbnail} 
              alt={title}
              class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-500"
            />
          ) : (
            <!-- 영상도 썸네일도 없는 경우 -->
            <div class="w-full h-full bg-gradient-to-br from-blue-400 to-purple-500 flex items-center justify-center text-white text-6xl">
              🚀
            </div>
          )}
          
          <!-- Featured 배지 -->
          {featured && (
            <span class="absolute top-4 right-4 bg-yellow-400 text-yellow-900 px-3 py-2 rounded-full text-sm font-semibold">
              Featured
            </span>
          )}
          
          <!-- Hover Overlay -->
          <div class="absolute inset-0 bg-black/50 opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex items-center justify-center">
            <div class="flex gap-4">
              {links?.github && (
                <a 
                  href={links.github}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="w-12 h-12 bg-white/90 rounded-full flex items-center justify-center text-gray-900 hover:bg-white transition-colors transform hover:scale-110"
                  aria-label="GitHub 저장소"
                >
                  <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
                    <path d="M12 0C5.374 0 0 5.373 0 12 0 17.302 3.438 21.8 8.207 23.387c.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23A11.509 11.509 0 0112 5.803c1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.30.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576C20.566 21.797 24 17.3 24 12c0-6.627-5.373-12-12-12z"/>
                  </svg>
                </a>
              )}
              
              {links?.site && (
                <a 
                  href={links.site}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="w-12 h-12 bg-white/90 rounded-full flex items-center justify-center text-blue-600 hover:bg-white transition-colors transform hover:scale-110"
                  aria-label="라이브 사이트"
                >
                  <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"/>
                  </svg>
                </a>
              )}
              
              <a 
                href={`/project/${slug}`}
                class="w-12 h-12 bg-white/90 rounded-full flex items-center justify-center text-green-600 hover:bg-white transition-colors transform hover:scale-110"
                aria-label="프로젝트 상세보기"
              >
                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"/>
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"/>
                </svg>
              </a>
            </div>
          </div>
        </div>
      </div>
      
      <!-- 프로젝트 정보 -->
      <div class="lg:w-1/2 p-6 lg:p-8">
        <h2 class="text-2xl lg:text-3xl font-bold text-gray-900 dark:text-white mb-3 group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors">
          {title}
        </h2>
        
        <p class="text-gray-600 dark:text-gray-300 mb-6 text-lg leading-relaxed">
          {description}
        </p>
        
        <!-- 기술 스택 -->
        <div class="flex flex-wrap gap-2 mb-6">
          {tags.map((tag) => (
            <span class="px-3 py-1 text-sm font-semibold text-blue-800 bg-blue-100 dark:text-blue-200 dark:bg-blue-900/50 rounded-full">
              {tag}
            </span>
          ))}
        </div>
        
        <!-- 메타 정보 -->
        <div class="text-sm text-gray-500 dark:text-gray-400 mb-6">
          <time datetime={date.toISOString()}>{displayDate}</time>
        </div>
        
        <!-- 액션 버튼 -->
        <div class="flex gap-3">
          {links?.github && (
            <a 
              href={links.github}
              target="_blank"
              rel="noopener noreferrer"
              class="inline-flex items-center px-4 py-2 bg-gray-900 dark:bg-gray-700 text-white rounded-lg hover:bg-gray-800 dark:hover:bg-gray-600 transition-colors font-medium"
            >
              <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 24 24">
                <path d="M12 0C5.374 0 0 5.373 0 12 0 17.302 3.438 21.8 8.207 23.387c.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23A11.509 11.509 0 0112 5.803c1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.30.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576C20.566 21.797 24 17.3 24 12c0-6.627-5.373-12-12-12z"/>
              </svg>
              GitHub
            </a>
          )}
          
          {links?.site && (
            <a 
              href={links.site}
              target="_blank"
              rel="noopener noreferrer"
              class="inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors font-medium"
            >
              <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"/>
              </svg>
              라이브 사이트
            </a>
          )}
          
          <a 
            href={`/project/${slug}`}
            class="inline-flex items-center px-4 py-2 border border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors font-medium"
          >
            자세히 보기 →
          </a>
        </div>
      </div>
    </div>
  </article>
)}

<!-- 지연 로딩 및 비디오 컨트롤 스크립트 -->
<script>
  class ProjectCardManager {
    constructor() {
      this.observerOptions = {
        root: null,
        rootMargin: '0px',
        threshold: 0.5, // 50% 이상 보일 때 트리거
      };
      
      this.setupObserver();
    }
    
    setupObserver() {
      if (!('IntersectionObserver' in window)) return;
      
      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          const card = entry.target;
          const video = card.querySelector('.lazy-video');
          const thumbnail = card.querySelector('.thumbnail-image');
          
          if (!video || !card.dataset.videoUrl) return;

          if (entry.isIntersecting) {
            // 화면에 보이면 재생
            if (card.dataset.videoReady === 'true') {
              this.playVideo(video, thumbnail);
            } else if (card.dataset.videoPreparing !== 'true') {
              this.prepareAndPlay(card, video, thumbnail);
            }
          } else {
            // 화면에서 사라지면 정지
            this.pauseVideo(video, thumbnail);
          }
        });
      }, this.observerOptions);
      
      document.querySelectorAll('.project-card').forEach(card => {
        observer.observe(card);
      });
    }

    prepareAndPlay(card, video, thumbnail) {
      card.dataset.videoPreparing = 'true';
      
      video.addEventListener('loadeddata', () => {
        card.dataset.videoReady = 'true';
        this.playVideo(video, thumbnail);
      }, { once: true });

      const source = video.querySelector('source');
      if (source && !source.getAttribute('src')) {
          source.src = card.dataset.videoUrl;
          video.load();
      }
    }
    
    playVideo(video, thumbnail) {
      if (!video || !video.paused) return; // 이미 재생 중이면 리턴
      
      video.currentTime = 0;
      const playPromise = video.play();
      
      if (playPromise !== undefined) {
        playPromise.then(() => {
          // 재생 성공 시 비디오 표시
          video.style.opacity = '1';
          if (thumbnail) {
            thumbnail.style.opacity = '0.3'; // 썸네일은 어둡게
          }
        }).catch(() => {
          // 자동재생 실패 (브라우저 정책 등)
        });
      }
    }
    
    pauseVideo(video, thumbnail) {
      if (!video || video.paused) return; // 이미 정지 상태면 리턴
      
      video.pause();
      video.currentTime = 0;
      
      // 썸네일 다시 표시
      video.style.opacity = '0';
      if (thumbnail) {
        thumbnail.style.opacity = '1';
      }
    }
  }
  
  // DOM 로드 완료 후 초기화
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', () => {
      new ProjectCardManager();
    });
  } else {
    new ProjectCardManager();
  }
</script>

<style>
  /* CSS 애니메이션 효과 */
  @keyframes pulse-gradient {
    0%, 100% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
  }
  
  .animate-pulse-gradient {
    background-size: 200% 200%;
    animation: pulse-gradient 3s ease-in-out infinite;
  }
  
  /* 썸네일 이미지에 미묘한 애니메이션 */
  .thumbnail-image {
    transition: all 0.7s cubic-bezier(0.4, 0, 0.2, 1);
  }
  
  .project-card:hover .thumbnail-image {
    transform: scale(1.1);
    filter: brightness(1.1) contrast(1.05);
  }
  
  /* 비디오 전환 효과 */
  .lazy-video {
    transition: opacity 0.5s ease-in-out;
  }
  
  /* 텍스트 라인 클램프 */
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  /* 호버 시 부드러운 그라데이션 애니메이션 */
  .project-card {
    position: relative;
    overflow: hidden;
  }
  
  .project-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      90deg,
      transparent,
      rgba(255, 255, 255, 0.1),
      transparent
    );
    transition: left 0.7s ease;
    z-index: 1;
    pointer-events: none;
  }
  
  .project-card:hover::before {
    left: 100%;
  }
  
  /* 포커스 접근성 */
  .project-card:focus {
    outline: 2px solid #3b82f6;
    outline-offset: 2px;
  }
  
  /* 다크모드 호환성 */
  @media (prefers-color-scheme: dark) {
    .project-card::before {
      background: linear-gradient(
        90deg,
        transparent,
        rgba(255, 255, 255, 0.05),
        transparent
      );
    }
  }
</style> 