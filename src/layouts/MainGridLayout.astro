---
import BaseLayout from './BaseLayout.astro';
import { MobileMenuButton } from '../components/common/Header/MobileMenuButton.tsx';
import { twMerge } from 'tailwind-merge';
import ThemeToggleButton from '../components/common/Header/ThemeToggleButton.tsx';
import { socialLinksArray } from '../data/socialLinks';

export interface Props {
	title: string;
	description?: string;
	hasHeaderBackground?: boolean;
}

const { title, description, hasHeaderBackground = false } = Astro.props;

// 중앙 관리되는 소셜 링크 사용
const socialLinks = socialLinksArray;

const brandingMessage = {
	line1: '지속가능한 미래를 만드는',
	line2: '탄소중립 솔루션 개발자'
};
---

<BaseLayout title={title} description={description}>
	<slot name="meta" slot="meta" />
	
	<header class={twMerge(
		'fixed top-0 left-0 right-0 z-50 transition-all duration-300',
		hasHeaderBackground ? 'bg-white/90 dark:bg-gray-800/80 backdrop-blur-sm border-b border-gray-200 dark:border-gray-700' : 'bg-transparent'
	)}>
		<nav class="max-w-7xl mx-auto px-4 h-16 flex items-center justify-between">
			<a href="/" class="text-xl font-bold text-gray-900 dark:text-gray-100 hover:text-blue-600 dark:hover:text-blue-400 transition-colors">
				Jinmin
			</a>
			
			<!-- 데스크톱 네비게이션 - Fuwari 스타일 -->
			<ul class="hidden lg:flex space-x-8">
				<li><a href="/" class="text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 transition-colors font-medium">Home</a></li>
				<li><a href="/about" class="text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 transition-colors font-medium">About</a></li>
				            <li><a href="/project" class="text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 transition-colors font-medium">Projects</a></li>
				<li><a href="/blog/all/page/1" class="text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 transition-colors font-medium">Blogs</a></li>
			</ul>
			
			<div class="flex items-center gap-4">
				<!-- 테마 토글 버튼 -->
				<ThemeToggleButton client:load />

				<!-- 모바일 햄버거 메뉴 -->
				<div class="lg:hidden">
					<MobileMenuButton client:load />
				</div>
			</div>
		</nav>
	</header>
	
	<main class={twMerge(
		'flex-grow',
		hasHeaderBackground && 'pt-16'
	)}>
		<slot />
	</main>
	
	<footer class="bg-gray-900 text-white py-8 sm:py-10 lg:py-12">
		<div class="max-w-4xl mx-auto px-4">
			<!-- 메인 Footer 컨텐츠: 3열 그리드 (반응형) -->
			<div class="grid grid-cols-1 md:grid-cols-3 gap-6 sm:gap-8 items-center mb-6 sm:mb-8">
				
				<!-- 소셜 링크 (왼쪽) -->
				<div class="flex justify-center md:justify-start space-x-4 sm:space-x-6">
					{socialLinks.map((link) => (
						<a 
							href={link.url}
							target={link.name !== 'Email' ? '_blank' : undefined}
							rel={link.name !== 'Email' ? 'noopener noreferrer' : undefined}
							class="text-gray-400 hover:text-white transition-colors duration-300 p-1.5 sm:p-2"
							aria-label={link.name}
						>
							{link.icon === 'github' && (
								<svg class="w-5 h-5 sm:w-6 sm:h-6" fill="currentColor" viewBox="0 0 24 24">
									<path d="M12 0C5.374 0 0 5.373 0 12 0 17.302 3.438 21.8 8.207 23.387c.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23A11.509 11.509 0 0112 5.803c1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576C20.566 21.797 24 17.3 24 12c0-6.627-5.373-12-12-12z"/>
								</svg>
							)}
							{link.icon === 'linkedin' && (
								<svg class="w-5 h-5 sm:w-6 sm:h-6" fill="currentColor" viewBox="0 0 24 24">
									<path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
								</svg>
							)}
							{link.icon === 'email' && (
								<svg class="w-5 h-5 sm:w-6 sm:h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"/>
								</svg>
							)}
						</a>
					))}
				</div>

				<!-- 브랜딩 메시지 (중앙) -->
				<div class="text-center">
					<p class="text-base sm:text-lg font-medium text-gray-200">{brandingMessage.line1}</p>
					<p class="text-xs sm:text-sm text-gray-400 mt-1">{brandingMessage.line2}</p>
				</div>

				<!-- 추가 정보 영역 (오른쪽) - 확장성 고려 -->
				<div class="flex justify-center md:justify-end">
					<div class="text-center md:text-right">
						<p class="text-xs sm:text-sm text-gray-400">수원, 대한민국</p>
						<p class="text-xs text-gray-500 mt-1">ESG & 개발자</p>
					</div>
				</div>
			</div>

			<!-- 저작권 정보 (하단 중앙) -->
			<div class="border-t border-gray-800 pt-4 sm:pt-6">
				<p class="text-center text-xs sm:text-sm text-gray-400">
					&Copyright copy; 2025 Jinmin. All rights reserved.
				</p>
			</div>
		</div>
	</footer>
	
	<!-- 이미지 최적화 스크립트 -->
	<script>
		// 이미지 최적화 관련 추가 설정
		import('../scripts/imageOptimization.ts').then(module => {
			const imageOptimizer = module.default;
			
			// 페이지 변경 시 새로운 이미지들을 관찰 대상에 추가
			const observeNewContent = () => {
				setTimeout(() => {
					imageOptimizer.observeNewImages();
				}, 100);
			};
			
			// MutationObserver로 동적 콘텐츠 감지
			if ('MutationObserver' in window) {
				const observer = new MutationObserver((mutations) => {
					let hasNewImages = false;
					mutations.forEach(mutation => {
						if (mutation.type === 'childList') {
							mutation.addedNodes.forEach(node => {
								if (node.nodeType === 1) { // Element node
									const element = node as Element;
									if (element.tagName === 'IMG' || element.querySelector('img')) {
										hasNewImages = true;
									}
								}
							});
						}
					});
					
					if (hasNewImages) {
						observeNewContent();
					}
				});
				
				observer.observe(document.body, {
					childList: true,
					subtree: true
				});
			}
			
			// 페이지가 완전히 로드된 후 최종 최적화
			window.addEventListener('load', () => {
				setTimeout(() => {
					imageOptimizer.observeNewImages();
				}, 500);
			});
		}).catch(error => {
			console.warn('이미지 최적화 스크립트 로딩 실패:', error);
		});
		
		// 성능 모니터링 스크립트 로드 (개발 환경에서만)
		if (import.meta.env.DEV) {
			import('../scripts/performanceMonitor.ts').then(() => {
				console.log('📊 성능 모니터링이 활성화되었습니다.');
				console.log('💡 getPerformanceReport() 또는 exportPerformanceData()를 콘솔에서 실행해보세요.');
			}).catch(error => {
				console.warn('성능 모니터링 스크립트 로딩 실패:', error);
			});
		}
	</script>
</BaseLayout>
